version: "3.8"

##############################################################################
#
# services
#
# - Uses .env for environment variables
#
##############################################################################

services:

################################################################################
#
# - live_qa
# - ollama
# - neo4j
# - neodash_viewer (for dashboard viewers)
# - neodash_editor (for dashboard editors)
#
################################################################################

  ollama:
    image: ollama/ollama:latest
    hostname: ollama
    container_name: ollama
    networks:
      - backend
    ports:
      - 11434:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - $PWD/deployment/ollama/ollama:/root/.ollama
    pull_policy: always
    tty: true
    restart: always

  ####################
  # live_qa
  ####################
  live_qa:
    image: live_qa:latest
    container_name: live_qa
    build:
      context: $PWD/live_qa/
      dockerfile: $PWD/live_qa/Dockerfile
    depends_on:
      - ollama
    networks:
      - backend
    ports:
      - 8000:8000
    restart: always

  ####################
  # neo4j
  ####################
  neo4j:
    image: neo4j:${NEO4J_VERSION}
    hostname: neo4j
    container_name: neo4j
    networks:
      - backend
    ports:
      - ${NEO4J_HTTP_PORT}:7474
      - ${NEO4J_HTTPS_PORT}:7473
      - ${NEO4J_BOLT_PORT}:7687
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - NEO4J_server_default__advertised__address=localhost
      - NEO4j_server_bolt_advertised_address=:${NEO4J_BOLT_PORT}
      - NEO4j_server_http_advertised_address=:${NEO4J_HTTP_PORT}
      - NEO4J_server_default__listen__address=0.0.0.0
      - NEO4j_server_bolt_listen_address=:${NEO4J_BOLT_PORT}
      - NEO4j_server_http_listen_address=:${NEO4J_HTTP_PORT}
      - NEO4J_server_memory_pagecache_size=${NEO4J_SERVER_MEMORY_PAGECACHE_SIZE}
      - NEO4J_server_memory_heap.initial__size=${NEO4J_SERVER_MEMORY_HEAP_INITIAL_SIZE}
      - NEO4J_server_memory_heap_max__size=${NEO4J_SERVER_MEMORY_HEAP_MAX_SIZE}
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_http_timeout_connect=300000
      - NEO4J_apoc_http_timeout_read=300000
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_unmanaged__extension__classes=n10s.endpoint=/rdf
      - NEO4J_server_jvm_additional=--add-modules jdk.incubator.vector
      # SSL certificates
      - NEO4J_dbms_ssl_policy_bolt_enabled=true
      - NEO4J_dbms_ssl_policy_bolt_base__directory=/ssl
      - NEO4J_dbms_ssl_policy_bolt_private__key=privkey.pem
      - NEO4J_dbms_ssl_policy_bolt_public__certificate=fullchain.pem
      - NEO4J_dbms_ssl_policy_https_enabled=true
      - NEO4J_dbms_ssl_policy_https_base__directory=/ssl
      - NEO4J_dbms_ssl_policy_https_private__key=privkey.pem
      - NEO4J_dbms_ssl_policy_https_public__certificate=fullchain.pem
    healthcheck:
      test: [ "CMD", "/var/lib/neo4j/bin/cypher-shell", "-u", "${NEO4J_USERNAME}", "-p", "${NEO4J_PASSWORD}", "MATCH () RETURN count(*) as count" ]
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - $PWD/deployment/neo4j/import:/import 
      - $PWD/deployment/neo4j/data:/data
      - $PWD/deployment/neo4j/logs:/logs
      - $PWD/deployment/neo4j/plugins:/plugins
      - /etc/letsencrypt/archive/neo4j.llm.foresight-serum.phac-aspc.alpha.canada.ca/cert1.pem:/ssl/cert.pem
      - /etc/letsencrypt/archive/neo4j.llm.foresight-serum.phac-aspc.alpha.canada.ca/privkey1.pem:/ssl/privkey.pem
      - /etc/letsencrypt/archive/neo4j.llm.foresight-serum.phac-aspc.alpha.canada.ca/chain1.pem:/ssl/chain.pem
      - /etc/letsencrypt/archive/neo4j.llm.foresight-serum.phac-aspc.alpha.canada.ca/fullchain1.pem:/ssl/fullchain.pem
    restart: always

  ####################
  # neodash-viewer
  ####################
  neodash-viewer: 
    image: nielsdejong/neodash:${NEODASH_VERSION}
    hostname: neodash-viewer
    container_name: neodash-viewer
    depends_on:
      - neo4j
    networks:
      - backend
    ports:
      - ${NEODASH_VIEWER_PORT}:5005
    environment:
      - ssoEnabled=false
      - ssoDiscoveryUrl=
      - standalone=true
      - standaloneProtocol=bolt
      - standaloneHost=neo4j.llm.foresight-serum.phac-aspc.alpha.canada.ca
      - standalonePort=7688
      - standaloneUsername=${NEO4J_USERNAME}
      - standaloneDatabase=neo4j
      - standaloneDashboardName=${NEODASH_DASHBOARD}
      - standaloneDashboardDatabase=neo4j
      - loggingMode=1
    restart: always

  ####################
  # neodash-editor
  ####################
  neodash-editor: 
    image: nielsdejong/neodash:${NEODASH_VERSION}
    hostname: neodash-editor
    container_name: neodash-editor
    depends_on:
      - neo4j
    networks:
      - backend
    ports:
      - ${NEODASH_EDITOR_PORT}:5005
    restart: always

################################################################################
#
# networks
# - backend
#
################################################################################
networks:
  backend:
    name: backend
    external: true
