apiVersion: batch/v1
kind: Job
metadata:
  name: neo4j-job
spec:
  template:
    metadata:
      annotations:
        proxy.istio.io/config: '{"holdApplicationUntilProxyStarts": true}'
    spec:
      volumes:
        - name: import-config
          configMap:
            name: neo4j-config
        - name: import
          persistentVolumeClaim:
            claimName: import-pvc
        - name: plugins
          persistentVolumeClaim:
            claimName: plugins-pvc
      containers:
        - name: neo4j-job
          image: "{{ .Values.job.repository }}:{{ .Values.job.tag }}"
          imagePullPolicy: Always
          command: ["/bin/bash", "-c"]
          args:
            - |
              # Check if Neo4j is ready
              until cypher-shell -u $NEO4J_USERNAME -p $NEO4J_PASSWORD -a bolt://neo4j:7687 "RETURN 'Neo4j is up'"; do
                  echo 'Waiting for Neo4j to be ready...'
                  sleep 5
              done

              # Apply constraints and indexes
              cypher-shell -u $NEO4J_USERNAME -p $NEO4J_PASSWORD -a bolt://neo4j:7687 --file /var/lib/neo4j/import/create-constraints-and-indexes.cql
              echo 'Constraints and indexes are created âœ…'

          env:
            - name: NEO4J_USERNAME
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: NEO4J_USERNAME
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: NEO4J_PASSWORD
          volumeMounts:
            - name: import
              mountPath: /var/lib/neo4j/import
            - name: plugins
              mountPath: /var/lib/neo4j/plugins
      restartPolicy: OnFailure
