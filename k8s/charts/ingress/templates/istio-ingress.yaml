apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ingress-cert
spec:
  dnsNames:
    - "signals-signaux.alpha.phac-aspc.gc.ca"
    - "*.signals-signaux.alpha.phac-aspc.gc.ca"
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-{{ .Values.envSetting }}
  secretName: wildcard-ssl-{{ .Values.envSetting }}
status: {}
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: foresight-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "signals-signaux.alpha.phac-aspc.gc.ca"
        - "neo4j.signals-signaux.alpha.phac-aspc.gc.ca"
        - "neodash.signals-signaux.alpha.phac-aspc.gc.ca"
        - "neodash-designer.signals-signaux.alpha.phac-aspc.gc.ca"
      tls:
        httpsRedirect: true
    - port:
        number: 443
        name: https
        protocol: HTTPS
      hosts:
        - "signals-signaux.alpha.phac-aspc.gc.ca"
        - "neo4j.signals-signaux.alpha.phac-aspc.gc.ca"
        - "neodash.signals-signaux.alpha.phac-aspc.gc.ca"
        - "neodash-designer.signals-signaux.alpha.phac-aspc.gc.ca"    
      tls:
        mode: SIMPLE
        credentialName: wildcard-ssl-{{ .Values.envSetting }}
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
spec:
  type: LoadBalancer
  loadBalancerIP: {{ .Values.loadBalancerIP }}
  selector:
    istio: ingressgateway
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-ingressgateway
  labels:
    app: istio-ingressgateway
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
      labels:
        istio: ingressgateway
        istio.io/rev: asm-managed
    spec:
      containers:
      - name: istio-proxy
        image: auto
        env:
        - name: ISTIO_META_UNPRIVILEGED_POD
          value: "true"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: istio-ingressgateway-sds
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: istio-ingressgateway-sds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: istio-ingressgateway-sds
subjects:
- kind: ServiceAccount
  name: default