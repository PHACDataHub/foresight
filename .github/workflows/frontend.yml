# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Frontend Tests

defaults:
  run:
    working-directory: ./frontend

on:
  # Runs on pushes
  push:
    branches:
      - main      
    paths:
      - 'frontend'
      - '.github/workflows/frontend.yml'

  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main      
    paths:
      - 'frontend'
      - '.github/workflows/frontend.yml'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
      
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/frontend/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/frontend/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager" >&2
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache-dependency-path: "frontend"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            frontend/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json', 'frontend/yarn.lock') }}-${{ hashFiles('frontend/**.[jt]s', 'frontend/**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json', 'frontend/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Perform linting
        run: |
          cp .env.example .env
          npm run lint
      - name: Run unit tests
        run: |
          npm run test
